// Mocks generated by Mockito 5.4.0 from annotations
// in rentworks/test/features/rental_contract/domain/usecases/rental_contract_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:rentworks/features/rental_contract/domain/entities/rental_contract.dart'
    as _i5;
import 'package:rentworks/features/rental_contract/domain/repositories/rental_contract_repository.dart'
    as _i2;
import 'package:rentworks/features/rental_contract/domain/usecases/params/rental_contract_params.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RentalContractRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRentalContractRepository extends _i1.Mock
    implements _i2.RentalContractRepository {
  MockRentalContractRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<int> createRentalContract(_i4.RentalContractParams? contract) =>
      (super.noSuchMethod(
        Invocation.method(
          #createRentalContract,
          [contract],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
  @override
  _i3.Future<void> terminateRentalContract(String? contractId) =>
      (super.noSuchMethod(
        Invocation.method(
          #terminateRentalContract,
          [contractId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> renewRentalContract(String? contractId) =>
      (super.noSuchMethod(
        Invocation.method(
          #renewRentalContract,
          [contractId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<bool> updateRentalContract(_i5.RentalContract? updatedContract) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRentalContract,
          [updatedContract],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
